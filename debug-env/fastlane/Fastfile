# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command
# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`
# If you want to automatically update fastlane if a new version is available:
# update_fastlane
# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.204.1"
default_platform :ios

ENV["FASTLANE_SKIP_UPDATE_CHECK"] = "1"
ENV["SPACESHIP_SKIP_2FA_UPGRADE"] = "1"
# Set default target for get_version_number()
ENV["FL_VERSION_NUMBER_TARGET"] = "Examples"
platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
  end

  desc "Increment build number based on current TestFlight build number"
  desc "Commits the changes, but does not push them to any remote."
  lane :bump_build_number do
      match(type: "appstore")
      update_code_signing_settings(
        use_automatic_signing: true,
        path: "MapboxMaps.xcodeproj",
        targets: ["Examples"],
        team_id: "GJZR2MEM28",
        code_sign_identity: "Apple Development",
        bundle_identifier: "com.mapbox.examples"

      )
      increment_build_number({
        build_number: latest_testflight_build_number + 1
      })
      increment_version_number(
        version_number: "1.0" # Set a specific version number
      )
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure that the signing certificate and provisioning profiles are up to date."
  lane :build_and_submit do
    build_app(
      scheme: "Examples",
      project: "MapboxMaps.xcodeproj",
      xcargs: "SWIFT_TREAT_WARNINGS_AS_ERRORS=NO" # Disable to bypass Deprecated error on OfflineManager example
    )
    upload_to_testflight(
      beta_app_feedback_email: "applemachine@mapbox.com",
      beta_app_description: "Examples app pre-release test build.",
      demo_account_required: false,
      skip_waiting_for_build_processing: false
    )
  end

  desc "Generate build from source MapboxMaps.xcodeproj."
  desc "Then build and submit a new beta build to Apple TestFlight, after bumping just the build number."
  lane :update_and_release do
    Dir.chdir("..") do
      # code here runs in the parent directory
      iOS_branch = prompt(
        text: "iOS SDK branch: ",
      )
      native_branch = prompt(
        text: "GL-Native branch: ",
      )
      turf_branch = prompt(
        text: "Turf branch: ",
      )
      mme_branch = prompt(
        text: "MME branch: ",
      )
      build_from_source_script = "./generate-debuggable-environment --commit #{iOS_branch} --gl-native-commit #{native_branch} --turf-commit #{turf_branch} --mme-commit #{mme_branch}"
      puts "Generating project using requested dependencies using: #{build_from_source_script}"
      sh("#{build_from_source_script}")
    end
      bump_build_number
      build_and_submit
  end

  desc "Build and submit a new beta build to Apple TestFlight, after bumping just the build number."
  lane :beta_release do
    # run this lane after update_and_release if build and submit fails for any reason
    bump_build_number
    build_and_submit
  end

  after_all do |lane|
    # This block is called, only if the executed lane was successful
  end

  error do |lane, exception|
    # This block is called, if an error occurs in the execution
  end
end
# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions
# fastlane reports which actions are used
# No personal data is recorded. Learn more at https://github.com/fastlane/enhancer
opt_out_usage
