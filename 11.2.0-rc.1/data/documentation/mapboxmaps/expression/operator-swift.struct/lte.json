{"identifier":{"url":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct\/lte","interfaceLanguage":"swift"},"metadata":{"title":"lte","externalID":"s:10MapboxMaps10ExpressionV8OperatorV3lteAEvpZ","symbolKind":"property","modules":[{"name":"MapboxMaps"}],"roleHeading":"Type Property","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lte"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps10ExpressionV","text":"Expression"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV","kind":"typeIdentifier","text":"Operator"}],"role":"symbol"},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"text":" if the first input is less than or equal to the second, ","type":"text"},{"type":"codeVoice","code":"false"},{"type":"text","text":" otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional "},{"type":"codeVoice","code":"collator"},{"text":" argument to control locale-dependent string comparisons.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/MapboxMaps\/documentation\/MapboxMaps","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expressions","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct"]]},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/lte"]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lte","kind":"identifier"},{"kind":"text","text":": "},{"text":"Expression","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps10ExpressionV"},{"text":".","kind":"text"},{"text":"Operator","preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct","kind":"typeIdentifier"}],"languages":["swift"]}]}],"references":{"doc://MapboxMaps/documentation/MapboxMaps/Expressions":{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expressions","abstract":[],"role":"collectionGroup","kind":"article","type":"topic","title":"Expressions","url":"\/documentation\/mapboxmaps\/expressions"},"doc://MapboxMaps/documentation/MapboxMaps":{"type":"topic","abstract":[{"type":"text","text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal."}],"kind":"symbol","role":"collection","title":"MapboxMaps","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps","url":"\/documentation\/mapboxmaps"},"doc://MapboxMaps/documentation/MapboxMaps/Expression":{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","isActive":true,"type":"reference"},{"type":"text","text":" defines a formula for computing the value of any layout property, paint property,"},{"type":"text","text":" "},{"text":"or filter within a map style. Expressions allow you to style data with multiple feature","type":"text"},{"type":"text","text":" "},{"text":"properties at once, apply conditional logic, and manipulate data with mathematical, logical, and","type":"text"},{"text":" ","type":"text"},{"text":"string operators. This allows for sophisticated runtime styling.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"Expression","kind":"identifier"}],"kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Expression","kind":"identifier"}],"title":"Expression","url":"\/documentation\/mapboxmaps\/expression"},"doc://MapboxMaps/documentation/MapboxMaps/Expression/Operator-swift.struct":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Operator"}],"kind":"symbol","navigatorTitle":[{"text":"Operator","kind":"identifier"}],"url":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct","role":"symbol","title":"Expression.Operator","abstract":[],"type":"topic","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct"},"doc://MapboxMaps/documentation/MapboxMaps/Expression/Operator-swift.struct/lte":{"title":"lte","type":"topic","abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"text":" if the first input is less than or equal to the second, ","type":"text"},{"type":"codeVoice","code":"false"},{"text":" otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional ","type":"text"},{"type":"codeVoice","code":"collator"},{"text":" argument to control locale-dependent string comparisons.","type":"text"}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct\/lte","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"lte","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Expression","preciseIdentifier":"s:10MapboxMaps10ExpressionV"},{"kind":"text","text":"."},{"preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV","text":"Operator","kind":"typeIdentifier"}],"url":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/lte","role":"symbol"}}}