{"metadata":{"roleHeading":"Type Property","modules":[{"name":"MapboxMaps"}],"symbolKind":"property","externalID":"s:10MapboxMaps10ExpressionV8OperatorV3neqAEvpZ","title":"neq","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"neq","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10MapboxMaps10ExpressionV","text":"Expression","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Operator","preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV","kind":"typeIdentifier"}]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"neq"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Expression","preciseIdentifier":"s:10MapboxMaps10ExpressionV","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression"},{"kind":"text","text":"."},{"text":"Operator","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV"}]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/neq"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct\/neq","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"text":" if the input values are not equal, ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" otherwise. The comparison is strictly typed: values of different runtime types are always considered unequal. Cases where the types are known to be different at parse time are considered invalid and will produce a parse error. Accepts an optional ","type":"text"},{"code":"collator","type":"codeVoice"},{"text":" argument to control locale-dependent string comparisons.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/MapboxMaps\/documentation\/MapboxMaps","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expressions","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"references":{"doc://MapboxMaps/documentation/MapboxMaps/Expressions":{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expressions","abstract":[],"role":"collectionGroup","kind":"article","type":"topic","title":"Expressions","url":"\/documentation\/mapboxmaps\/expressions"},"doc://MapboxMaps/documentation/MapboxMaps/Expression/Operator-swift.struct/neq":{"role":"symbol","url":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/neq","title":"neq","kind":"symbol","type":"topic","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct\/neq","abstract":[{"type":"text","text":"Returns "},{"code":"true","type":"codeVoice"},{"text":" if the input values are not equal, ","type":"text"},{"type":"codeVoice","code":"false"},{"text":" otherwise. The comparison is strictly typed: values of different runtime types are always considered unequal. Cases where the types are known to be different at parse time are considered invalid and will produce a parse error. Accepts an optional ","type":"text"},{"code":"collator","type":"codeVoice"},{"type":"text","text":" argument to control locale-dependent string comparisons."}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"neq","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10MapboxMaps10ExpressionV","kind":"typeIdentifier","text":"Expression"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV","text":"Operator"}]},"doc://MapboxMaps/documentation/MapboxMaps":{"type":"topic","abstract":[{"type":"text","text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal."}],"kind":"symbol","role":"collection","title":"MapboxMaps","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps","url":"\/documentation\/mapboxmaps"},"doc://MapboxMaps/documentation/MapboxMaps/Expression/Operator-swift.struct":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Operator"}],"kind":"symbol","navigatorTitle":[{"text":"Operator","kind":"identifier"}],"url":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct","role":"symbol","title":"Expression.Operator","abstract":[],"type":"topic","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct"},"doc://MapboxMaps/documentation/MapboxMaps/Expression":{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","isActive":true,"type":"reference"},{"type":"text","text":" defines a formula for computing the value of any layout property, paint property,"},{"type":"text","text":" "},{"text":"or filter within a map style. Expressions allow you to style data with multiple feature","type":"text"},{"type":"text","text":" "},{"text":"properties at once, apply conditional logic, and manipulate data with mathematical, logical, and","type":"text"},{"text":" ","type":"text"},{"text":"string operators. This allows for sophisticated runtime styling.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"Expression","kind":"identifier"}],"kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Expression","kind":"identifier"}],"title":"Expression","url":"\/documentation\/mapboxmaps\/expression"}}}