{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/MapboxMaps\/documentation\/MapboxMaps","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Camera-and-coordinates","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportState"],["doc:\/\/MapboxMaps\/documentation\/MapboxMaps","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/MapboxMap-APIs","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Camera-and-coordinates","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportState"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportState\/observeDataSource(with:)"},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"observeDataSource","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"handler"},{"kind":"text","text":": "},{"text":"@escaping","kind":"attribute"},{"text":" (","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"camera","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"CameraOptions","preciseIdentifier":"s:10MapboxMaps13CameraOptionsV","kind":"typeIdentifier","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/CameraOptions"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Cancelable","kind":"typeIdentifier","text":"Cancelable","preciseIdentifier":"c:objc(pl)MBXCancelable"}],"platforms":["iOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"handler","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that is invoked by the state whenever its camera changes. Returns"},{"text":" ","type":"text"},{"type":"codeVoice","code":"true"},{"text":" to stay subscribed and ","type":"text"},{"type":"codeVoice","code":"false"},{"type":"text","text":" to unsubscribe. "},{"code":"handler","type":"codeVoice"},{"text":" must be","type":"text"},{"type":"text","text":" "},{"type":"text","text":"invoked on the main queue."}]}]},{"content":[{"inlineContent":[{"text":"The ","type":"text"},{"code":"ViewportState","type":"codeVoice"},{"text":"’s most recent camera.","type":"text"}],"type":"paragraph"}],"name":"camera"}]},{"content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"Cancelable"},{"type":"text","text":" that the caller can use to unsubscribe."}]}],"kind":"content"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"This method is commonly used by "},{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportTransition","type":"reference","isActive":true},{"type":"text","text":" implementations to obtain the"},{"text":" ","type":"text"},{"type":"text","text":"target camera for transition animations. Transitions typically cannot start their animations until after"},{"type":"text","text":" "},{"code":"handler","type":"codeVoice"},{"type":"text","text":" is invoked for the first time, so it’s a good idea for states to invoke "},{"type":"codeVoice","code":"handler"},{"type":"text","text":" with"},{"type":"text","text":" "},{"text":"the current camera if it’s not too stale rather than waiting for the next camera change to occur. To","type":"text"},{"type":"text","text":" "},{"type":"text","text":"increase the likelihood that a valid camera exists when a handler is registered, design"},{"type":"text","text":" "},{"code":"ViewportState","type":"codeVoice"},{"text":" implementations so that they start updating their internal state prior to when","type":"text"},{"type":"text","text":" "},{"text":"they are passed to ","type":"text"},{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportManager\/transition(to:transition:completion:)","type":"reference","isActive":true},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"The caller may either cancel the returned ","type":"text"},{"type":"codeVoice","code":"Cancelable"},{"type":"text","text":" "},{"inlineContent":[{"type":"text","text":"or"}],"type":"emphasis"},{"type":"text","text":" return "},{"code":"false","type":"codeVoice"},{"type":"text","text":" from"},{"text":" ","type":"text"},{"type":"codeVoice","code":"handler"},{"text":" to indicate that it wishes to stop receiving updates. Following either of these events,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"implemenations must no longer invoke "},{"type":"codeVoice","code":"handler"},{"text":" and must release all strong references to it.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"metadata":{"role":"symbol","roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"MapboxMaps"}],"required":true,"externalID":"s:10MapboxMaps13ViewportStateP17observeDataSource4withSo13MBXCancelable_pSbAA13CameraOptionsVc_tF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"observeDataSource","kind":"identifier"},{"kind":"text","text":"("},{"text":"with","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"camera","kind":"internalParam"},{"kind":"text","text":": "},{"text":"CameraOptions","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps13CameraOptionsV"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"text":"Cancelable","kind":"typeIdentifier","preciseIdentifier":"c:objc(pl)MBXCancelable"}],"title":"observeDataSource(with:)"},"abstract":[{"type":"text","text":"Registers a "},{"type":"codeVoice","code":"handler"},{"type":"text","text":" to receive the cameras being generated by this "},{"type":"codeVoice","code":"ViewportState"},{"text":".","type":"text"}],"variants":[{"paths":["\/documentation\/mapboxmaps\/viewportstate\/observedatasource(with:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://MapboxMaps/documentation/MapboxMaps/CameraOptions":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CameraOptions"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"CameraOptions"}],"url":"\/documentation\/mapboxmaps\/cameraoptions","role":"symbol","title":"CameraOptions","abstract":[],"type":"topic","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/CameraOptions"},"doc://MapboxMaps/documentation/MapboxMaps/ViewportState/observeDataSource(with:)":{"required":true,"type":"topic","abstract":[{"text":"Registers a ","type":"text"},{"code":"handler","type":"codeVoice"},{"type":"text","text":" to receive the cameras being generated by this "},{"type":"codeVoice","code":"ViewportState"},{"type":"text","text":"."}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportState\/observeDataSource(with:)","role":"symbol","url":"\/documentation\/mapboxmaps\/viewportstate\/observedatasource(with:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"observeDataSource","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"text":": (","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"camera"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10MapboxMaps13CameraOptionsV","kind":"typeIdentifier","text":"CameraOptions"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") -> ","kind":"text"},{"text":"Cancelable","kind":"typeIdentifier","preciseIdentifier":"c:objc(pl)MBXCancelable"}],"title":"observeDataSource(with:)"},"doc://MapboxMaps/documentation/MapboxMaps":{"type":"topic","abstract":[{"type":"text","text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal."}],"kind":"symbol","role":"collection","title":"MapboxMaps","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps","url":"\/documentation\/mapboxmaps"},"doc://MapboxMaps/documentation/MapboxMaps/Camera-and-coordinates":{"type":"topic","title":"Camera and coordinates","url":"\/documentation\/mapboxmaps\/camera-and-coordinates","role":"collectionGroup","kind":"article","abstract":[],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Camera-and-coordinates"},"doc://MapboxMaps/documentation/MapboxMaps/ViewportTransition":{"navigatorTitle":[{"kind":"identifier","text":"ViewportTransition"}],"abstract":[{"type":"codeVoice","code":"ViewportTransition"},{"type":"text","text":" is a protocol that "},{"isActive":true,"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportManager","type":"reference"},{"type":"text","text":" depends on as it orchestrates transitions"},{"text":" ","type":"text"},{"type":"text","text":"to and from different "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportState"},{"type":"text","text":"s."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ViewportTransition","kind":"identifier"}],"url":"\/documentation\/mapboxmaps\/viewporttransition","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportTransition","title":"ViewportTransition"},"doc://MapboxMaps/documentation/MapboxMaps/ViewportManager":{"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ViewportManager","kind":"identifier"}],"title":"ViewportManager","url":"\/documentation\/mapboxmaps\/viewportmanager","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ViewportManager"}],"abstract":[{"type":"codeVoice","code":"Viewport"},{"text":" provides a structured approach to organizing camera management logic into states and","type":"text"},{"type":"text","text":" "},{"text":"transitions between them.","type":"text"}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportManager"},"doc://MapboxMaps/documentation/MapboxMaps/ViewportState":{"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ViewportState","kind":"identifier"}],"url":"\/documentation\/mapboxmaps\/viewportstate","title":"ViewportState","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ViewportState"}],"abstract":[{"code":"ViewportState","type":"codeVoice"},{"type":"text","text":" is a protocol that "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportManager"},{"type":"text","text":" depends on as it orchestrates transitions to and"},{"type":"text","text":" "},{"text":"from different states.","type":"text"}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportState"},"doc://MapboxMaps/documentation/MapboxMaps/Cancelable":{"type":"topic","abstract":[],"kind":"symbol","url":"\/documentation\/mapboxmaps\/cancelable","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Cancelable","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Cancelable"}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Cancelable","title":"Cancelable"},"doc://MapboxMaps/documentation/MapboxMaps/MapboxMap-APIs":{"type":"topic","title":"MapboxMap","url":"\/documentation\/mapboxmaps\/mapboxmap-apis","role":"collectionGroup","kind":"article","abstract":[],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/MapboxMap-APIs"},"doc://MapboxMaps/documentation/MapboxMaps/ViewportManager/transition(to:transition:completion:)":{"role":"symbol","type":"topic","title":"transition(to:transition:completion:)","url":"\/documentation\/mapboxmaps\/viewportmanager\/transition(to:transition:completion:)","kind":"symbol","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportManager\/transition(to:transition:completion:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"transition","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"text":"ViewportState","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps13ViewportStateP"},{"kind":"text","text":", "},{"text":"transition","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ViewportTransition","preciseIdentifier":"s:10MapboxMaps18ViewportTransitionP","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"completion","kind":"externalParam"},{"kind":"text","text":": (("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"success"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")?)"}],"abstract":[{"type":"text","text":"Executes a transition to the requested state."}]}}}