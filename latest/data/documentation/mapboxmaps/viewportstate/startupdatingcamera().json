{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mapboxmaps\/viewportstate\/startupdatingcamera()"]}],"abstract":[{"type":"text","text":"Tells this state that it is now responsible for updating the camera."}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"startUpdatingCamera","kind":"identifier"},{"kind":"text","text":"()"}],"platforms":["iOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportManager","isActive":true},{"text":" calls this method at the end of a successful transition into this state.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Implementations typically have a dependency on either ","type":"text"},{"type":"reference","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/MapboxMap","isActive":true},{"type":"text","text":" so that they can use its"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/MapboxMap\/setCamera(to:)"},{"text":" method to change the camea or on","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/CameraAnimationsManager","isActive":true},{"text":" so that they can run camera animations.","type":"text"}]}]}],"kind":"symbol","metadata":{"title":"startUpdatingCamera()","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"startUpdatingCamera","kind":"identifier"},{"text":"()","kind":"text"}],"externalID":"s:10MapboxMaps13ViewportStateP19startUpdatingCamerayyF","roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"MapboxMaps"}],"role":"symbol"},"identifier":{"url":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportState\/startUpdatingCamera()","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/MapboxMaps\/documentation\/MapboxMaps","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Camera-and-coordinates","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportState"],["doc:\/\/MapboxMaps\/documentation\/MapboxMaps","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/MapboxMap-APIs","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Camera-and-coordinates","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportState"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://MapboxMaps/documentation/MapboxMaps":{"abstract":[{"text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal.","type":"text"}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps","url":"\/documentation\/mapboxmaps","role":"collection","title":"MapboxMaps","type":"topic","kind":"symbol"},"doc://MapboxMaps/documentation/MapboxMaps/ViewportState/startUpdatingCamera()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"startUpdatingCamera"},{"text":"()","kind":"text"}],"required":true,"title":"startUpdatingCamera()","type":"topic","kind":"symbol","abstract":[{"text":"Tells this state that it is now responsible for updating the camera.","type":"text"}],"url":"\/documentation\/mapboxmaps\/viewportstate\/startupdatingcamera()","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportState\/startUpdatingCamera()","role":"symbol"},"doc://MapboxMaps/documentation/MapboxMaps/Camera-and-coordinates":{"role":"collectionGroup","kind":"article","url":"\/documentation\/mapboxmaps\/camera-and-coordinates","abstract":[],"type":"topic","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Camera-and-coordinates","title":"Camera and coordinates"},"doc://MapboxMaps/documentation/MapboxMaps/MapboxMap-APIs":{"type":"topic","abstract":[],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/MapboxMap-APIs","url":"\/documentation\/mapboxmaps\/mapboxmap-apis","title":"MapboxMap","kind":"article","role":"collectionGroup"},"doc://MapboxMaps/documentation/MapboxMaps/CameraAnimationsManager":{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/CameraAnimationsManager","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"CameraAnimationsManager"}],"type":"topic","title":"CameraAnimationsManager","kind":"symbol","url":"\/documentation\/mapboxmaps\/cameraanimationsmanager","abstract":[{"text":"APIs for animating the camera.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"CameraAnimationsManager","kind":"identifier"}]},"doc://MapboxMaps/documentation/MapboxMaps/ViewportState":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/mapboxmaps\/viewportstate","navigatorTitle":[{"kind":"identifier","text":"ViewportState"}],"title":"ViewportState","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportState","abstract":[{"type":"codeVoice","code":"ViewportState"},{"type":"text","text":" is a protocol that "},{"isActive":true,"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportManager","type":"reference"},{"text":" depends on as it orchestrates transitions to and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"from different states."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ViewportState"}]},"doc://MapboxMaps/documentation/MapboxMaps/ViewportManager":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ViewportManager","kind":"identifier"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"ViewportManager","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportManager","url":"\/documentation\/mapboxmaps\/viewportmanager","title":"ViewportManager","abstract":[{"code":"Viewport","type":"codeVoice"},{"type":"text","text":" provides a structured approach to organizing camera management logic into states and"},{"type":"text","text":" "},{"type":"text","text":"transitions between them."}]},"doc://MapboxMaps/documentation/MapboxMaps/MapboxMap":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"MapboxMap","kind":"identifier"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"MapboxMap","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/MapboxMap","url":"\/documentation\/mapboxmaps\/mapboxmap","title":"MapboxMap","abstract":[{"text":"Provides access to the map model, including the camera, style, observable map events,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and querying rendered features."}]},"doc://MapboxMaps/documentation/MapboxMaps/MapboxMap/setCamera(to:)":{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/MapboxMap\/setCamera(to:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"setCamera","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps13CameraOptionsV","text":"CameraOptions"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Changes the map view by any combination of center, zoom, bearing, and pitch,"},{"type":"text","text":" "},{"type":"text","text":"without an animated transition. The map will retain its current values"},{"type":"text","text":" "},{"type":"text","text":"for any details not passed via the camera options argument. It is not"},{"text":" ","type":"text"},{"text":"guaranteed that the provided ","type":"text"},{"code":"CameraOptions","type":"codeVoice"},{"type":"text","text":" will be set, the map may apply"},{"type":"text","text":" "},{"type":"text","text":"constraints resulting in a different "},{"code":"CameraState","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","title":"setCamera(to:)","role":"symbol","url":"\/documentation\/mapboxmaps\/mapboxmap\/setcamera(to:)","kind":"symbol"}}}