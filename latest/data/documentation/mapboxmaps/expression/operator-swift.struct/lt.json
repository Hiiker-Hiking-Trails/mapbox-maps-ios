{"abstract":[{"text":"Returns ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the first input is strictly less than the second, "},{"type":"codeVoice","code":"false"},{"type":"text","text":" otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional "},{"type":"codeVoice","code":"collator"},{"type":"text","text":" argument to control locale-dependent string comparisons."}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/MapboxMaps\/documentation\/MapboxMaps","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expressions","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct"]]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct\/lt"},"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"role":"symbol","roleHeading":"Type Property","modules":[{"name":"MapboxMaps"}],"title":"lt","externalID":"s:10MapboxMaps10ExpressionV8OperatorV2ltAEvpZ","symbolKind":"property","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"lt","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10MapboxMaps10ExpressionV","kind":"typeIdentifier","text":"Expression"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV","text":"Operator"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/lt"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"lt","kind":"identifier"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps10ExpressionV","text":"Expression"},{"text":".","kind":"text"},{"text":"Operator","kind":"typeIdentifier","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct","preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV"}],"languages":["swift"]}]}],"references":{"doc://MapboxMaps/documentation/MapboxMaps/Expressions":{"url":"\/documentation\/mapboxmaps\/expressions","kind":"article","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expressions","role":"collectionGroup","abstract":[],"type":"topic","title":"Expressions"},"doc://MapboxMaps/documentation/MapboxMaps/Expression/Operator-swift.struct/lt":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/lt","title":"lt","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct\/lt","abstract":[{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if the first input is strictly less than the second, ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional ","type":"text"},{"code":"collator","type":"codeVoice"},{"text":" argument to control locale-dependent string comparisons.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lt"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10MapboxMaps10ExpressionV","text":"Expression","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Operator","preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV","kind":"typeIdentifier"}]},"doc://MapboxMaps/documentation/MapboxMaps":{"abstract":[{"text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal.","type":"text"}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps","url":"\/documentation\/mapboxmaps","role":"collection","title":"MapboxMaps","type":"topic","kind":"symbol"},"doc://MapboxMaps/documentation/MapboxMaps/Expression/Operator-swift.struct":{"title":"Expression.Operator","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct","type":"topic","navigatorTitle":[{"text":"Operator","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Operator"}],"url":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct","abstract":[],"kind":"symbol"},"doc://MapboxMaps/documentation/MapboxMaps/Expression":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"Expression","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/mapboxmaps\/expression","title":"Expression","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Expression","kind":"identifier"}],"abstract":[{"text":"An ","type":"text"},{"type":"reference","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","isActive":true},{"text":" defines a formula for computing the value of any layout property, paint property,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"or filter within a map style. Expressions allow you to style data with multiple feature"},{"text":" ","type":"text"},{"type":"text","text":"properties at once, apply conditional logic, and manipulate data with mathematical, logical, and"},{"type":"text","text":" "},{"type":"text","text":"string operators. This allows for sophisticated runtime styling."}]}}}