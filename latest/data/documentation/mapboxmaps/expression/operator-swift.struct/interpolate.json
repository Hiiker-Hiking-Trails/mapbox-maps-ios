{"hierarchy":{"paths":[["doc:\/\/MapboxMaps\/documentation\/MapboxMaps","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expressions","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct"]]},"sections":[],"metadata":{"roleHeading":"Type Property","externalID":"s:10MapboxMaps10ExpressionV8OperatorV11interpolateAEvpZ","role":"symbol","symbolKind":"property","modules":[{"name":"MapboxMaps"}],"title":"interpolate","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"interpolate","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10MapboxMaps10ExpressionV","text":"Expression","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Operator","preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV"}]},"kind":"symbol","abstract":[{"text":"Produces continuous, smooth results by interpolating between pairs of input and output values (“stops”). The ","type":"text"},{"type":"codeVoice","code":"input"},{"text":" may be any numeric expression (e.g., ","type":"text"},{"type":"codeVoice","code":"[\"get\", \"population\"]"},{"type":"text","text":"). Stop inputs must be numeric literals in strictly ascending order. The output type must be "},{"type":"codeVoice","code":"number"},{"text":", ","type":"text"},{"type":"codeVoice","code":"array<number>"},{"type":"text","text":", or "},{"type":"codeVoice","code":"color"},{"type":"text","text":"."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct\/interpolate","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/interpolate"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"interpolate"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps10ExpressionV","text":"Expression","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct","text":"Operator","preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV"}],"languages":["swift"]}]},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Interpolation types:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"[\"linear\"]"},{"text":": Interpolates linearly between the pair of stops just less than and just greater than the input.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"[\"exponential\", base]"},{"type":"text","text":": Interpolates exponentially between the stops just less than and just greater than the input. "},{"type":"codeVoice","code":"base"},{"type":"text","text":" controls the rate at which the output increases: higher values make the output increase more towards the high end of the range. With values close to 1 the output increases linearly."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"[\"cubic-bezier\", x1, y1, x2, y2]","type":"codeVoice"},{"type":"text","text":": Interpolates using the cubic bezier curve defined by the given control points."}]}]}]}],"kind":"content"}],"references":{"doc://MapboxMaps/documentation/MapboxMaps/Expression/Operator-swift.struct":{"title":"Expression.Operator","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct","type":"topic","navigatorTitle":[{"text":"Operator","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Operator"}],"url":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct","abstract":[],"kind":"symbol"},"doc://MapboxMaps/documentation/MapboxMaps":{"abstract":[{"text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal.","type":"text"}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps","url":"\/documentation\/mapboxmaps","role":"collection","title":"MapboxMaps","type":"topic","kind":"symbol"},"doc://MapboxMaps/documentation/MapboxMaps/Expressions":{"url":"\/documentation\/mapboxmaps\/expressions","kind":"article","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expressions","role":"collectionGroup","abstract":[],"type":"topic","title":"Expressions"},"doc://MapboxMaps/documentation/MapboxMaps/Expression/Operator-swift.struct/interpolate":{"type":"topic","url":"\/documentation\/mapboxmaps\/expression\/operator-swift.struct\/interpolate","abstract":[{"text":"Produces continuous, smooth results by interpolating between pairs of input and output values (“stops”). The ","type":"text"},{"type":"codeVoice","code":"input"},{"type":"text","text":" may be any numeric expression (e.g., "},{"type":"codeVoice","code":"[\"get\", \"population\"]"},{"text":"). Stop inputs must be numeric literals in strictly ascending order. The output type must be ","type":"text"},{"code":"number","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"array<number>"},{"type":"text","text":", or "},{"type":"codeVoice","code":"color"},{"type":"text","text":"."}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.struct\/interpolate","role":"symbol","kind":"symbol","title":"interpolate","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"interpolate","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Expression","preciseIdentifier":"s:10MapboxMaps10ExpressionV"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10MapboxMaps10ExpressionV8OperatorV","kind":"typeIdentifier","text":"Operator"}]},"doc://MapboxMaps/documentation/MapboxMaps/Expression":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"Expression","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/mapboxmaps\/expression","title":"Expression","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Expression","kind":"identifier"}],"abstract":[{"text":"An ","type":"text"},{"type":"reference","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","isActive":true},{"text":" defines a formula for computing the value of any layout property, paint property,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"or filter within a map style. Expressions allow you to style data with multiple feature"},{"text":" ","type":"text"},{"type":"text","text":"properties at once, apply conditional logic, and manipulate data with mathematical, logical, and"},{"type":"text","text":" "},{"type":"text","text":"string operators. This allows for sophisticated runtime styling."}]}}}