executor: base-docker
steps:
  - checkout
  - mapbox/add-mapbox-ssh-key
  - mapbox/install-mbx-ci
  - attach_workspace:
      at: Products
  - run: ls -l Products/
  - run:
      name: Install AWSCLI (Linux)
      command: |
        cd /tmp
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install
  - run:
      name: Schedule DeviceFarm run
      command: |
        scripts/devicefarm.py \
          "$AWS_DEVICE_FARM_PROJECT_ARN" \
          --name "Benchmark_v2-$CIRCLE_SHA1-$CIRCLE_BUILD_NUM" \
          --device-pool "$AWS_DEVICE_POOL_ARN" \
          --ipa "Products/App.ipa" \
          --tests "Products/App.ipa" \
          --test-type XCTEST_UI \
          --spec Tests/SLAMetrics/testspec.yml \
          --output benchmark_waiter.json
  - store_artifacts:
      path: benchmark_waiter.json
  - run:
      name: Wait for DeviceFarm results
      command: |
        scripts/devicefarm.py \
          "$AWS_DEVICE_FARM_PROJECT_ARN" \
          --run-arn-file benchmark_waiter.json \
          --artifacts-dir BenchmarkResults \
          --output benchmark_results.json || true
  - persist_to_workspace:
      root: .
      paths:
        - benchmark_waiter.json
        - benchmark_results.json
  - run:
      name: Collect artifacts
      command: |
        zip -r BenchmarkResults.zip BenchmarkResults

        ARTIFACTS_PATH=$(find BenchmarkResults -name "Customer_Artifacts.zip" | head -n 1)
        unzip "$ARTIFACTS_PATH" -d artifacts
        find artifacts -name "*.xcresult" -exec cp -r {} metrics.xcresult \;
        zip -r metrics.xcresult.zip metrics.xcresult
      when: always
  - persist_to_workspace:
      root: .
      paths:
        - metrics.xcresult
        - BenchmarkResults
  - store_artifacts:
      path: BenchmarkResults.zip
  - store_artifacts:
      path: metrics.xcresult.zip
  - store_artifacts:
      path: benchmark_results.json
